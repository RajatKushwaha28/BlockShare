{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Documents\\\\BlockShare\\\\client\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import \"./Display.css\";\n// const Display = ({ contract, account }) => {\n//   const [data, setData] = useState([]);\n\n//   const getdata = async () => {\n//     let dataArray;\n//     const Otheraddress = document.querySelector(\".address\").value;\n//     try {\n//       if (Otheraddress) {\n//         dataArray = await contract.display(Otheraddress);\n//       } else {\n//         dataArray = await contract.display(account);\n//       }\n//     } catch (e) {\n//       alert(\"You don't have access\");\n//       return; // Exit the function if there's an error\n//     }\n\n//     if (dataArray.length > 0) {\n//       const items = dataArray.map((item, i) => {\n//         const isImage = item.fileName.match(/\\.(jpeg|jpg|gif|png)$/i);\n//         const isPdf = item.fileName.match(/\\.pdf$/i);\n\n//         return (\n//           <div key={i} className=\"file-item\">\n//             {isImage ? (\n//               <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 <img\n//                   src={item.url}\n//                   alt={item.fileName}\n//                   className=\"image-list\"\n//                 />\n//               </a>\n//             ) : isPdf ? (\n//               <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 <img\n//                   src=\"https://cdn-icons-png.freepik.com/256/16425/16425681.png?semt=ais_hybrid\" // Add a PDF icon path here\n//                   alt={item.fileName}\n//                   className=\"pdf-icon\"\n//                 />\n//               </a>\n//             ) : (\n//               <div>\n//                 <p>Unsupported file type: {item.fileName}</p>\n//               </div>\n//             )}\n//             <p>{item.fileName}</p> {/* Display the file name */}\n//           </div>\n//         );\n//       });\n//       setData(items);\n//     } else {\n//       alert(\"No image to display\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"file-list\">{data}</div>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter Address\"\n//         className=\"address\"\n//       />\n//       <button className=\"center button\" onClick={getdata}>\n//         Get Data\n//       </button>\n//     </>\n//   );\n// };\n\n// export default Display;\n\nimport { useState } from \"react\";\nimport \"./Display.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = ({\n  contract,\n  account\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const getdata = async () => {\n    let dataArray;\n    const Otheraddress = document.querySelector(\".address\").value;\n    try {\n      if (Otheraddress) {\n        dataArray = await contract.display(Otheraddress);\n      } else {\n        dataArray = await contract.display(account);\n      }\n    } catch (e) {\n      alert(\"You don't have access\");\n      return; // Exit the function if there's an error\n    }\n    if (dataArray.length > 0) {\n      const items = dataArray.map((item, i) => {\n        const isImage = item.fileName.match(/\\.(jpeg|jpg|gif|png)$/i);\n        const isPdf = item.fileName.match(/\\.pdf$/i);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [isImage ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.url,\n              alt: item.fileName,\n              className: \"image-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this) : isPdf ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.freepik.com/256/16425/16425681.png?semt=ais_hybrid\",\n              alt: item.fileName,\n              className: \"pdf-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unsupported file type: \", item.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this);\n      });\n      setData(items);\n    } else {\n      alert(\"No image to display\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Address\",\n      className: \"address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center button\",\n      onClick: getdata,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","contract","account","_s","data","setData","getdata","dataArray","Otheraddress","document","querySelector","value","display","e","alert","length","items","map","item","i","isImage","fileName","match","isPdf","className","children","href","url","target","rel","src","alt","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/acer/Documents/BlockShare/client/src/components/Display.js"],"sourcesContent":["// import { useState } from \"react\";\r\n// import \"./Display.css\";\r\n// const Display = ({ contract, account }) => {\r\n//   const [data, setData] = useState([]);\r\n  \r\n//   const getdata = async () => {\r\n//     let dataArray;\r\n//     const Otheraddress = document.querySelector(\".address\").value;\r\n//     try {\r\n//       if (Otheraddress) {\r\n//         dataArray = await contract.display(Otheraddress);\r\n//       } else {\r\n//         dataArray = await contract.display(account);\r\n//       }\r\n//     } catch (e) {\r\n//       alert(\"You don't have access\");\r\n//       return; // Exit the function if there's an error\r\n//     }\r\n\r\n//     if (dataArray.length > 0) {\r\n//       const items = dataArray.map((item, i) => {\r\n//         const isImage = item.fileName.match(/\\.(jpeg|jpg|gif|png)$/i);\r\n//         const isPdf = item.fileName.match(/\\.pdf$/i);\r\n        \r\n//         return (\r\n//           <div key={i} className=\"file-item\">\r\n//             {isImage ? (\r\n//               <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                 <img\r\n//                   src={item.url}\r\n//                   alt={item.fileName}\r\n//                   className=\"image-list\"\r\n//                 />\r\n//               </a>\r\n//             ) : isPdf ? (\r\n//               <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                 <img\r\n//                   src=\"https://cdn-icons-png.freepik.com/256/16425/16425681.png?semt=ais_hybrid\" // Add a PDF icon path here\r\n//                   alt={item.fileName}\r\n//                   className=\"pdf-icon\"\r\n//                 />\r\n//               </a>\r\n//             ) : (\r\n//               <div>\r\n//                 <p>Unsupported file type: {item.fileName}</p>\r\n//               </div>\r\n//             )}\r\n//             <p>{item.fileName}</p> {/* Display the file name */}\r\n//           </div>\r\n//         );\r\n//       });\r\n//       setData(items);\r\n//     } else {\r\n//       alert(\"No image to display\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"file-list\">{data}</div>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Enter Address\"\r\n//         className=\"address\"\r\n//       />\r\n//       <button className=\"center button\" onClick={getdata}>\r\n//         Get Data\r\n//       </button>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Display;\r\n\r\nimport { useState } from \"react\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = ({ contract, account }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getdata = async () => {\r\n    let dataArray;\r\n    const Otheraddress = document.querySelector(\".address\").value;\r\n    try {\r\n      if (Otheraddress) {\r\n        dataArray = await contract.display(Otheraddress);\r\n      } else {\r\n        dataArray = await contract.display(account);\r\n      }\r\n    } catch (e) {\r\n      alert(\"You don't have access\");\r\n      return; // Exit the function if there's an error\r\n    }\r\n\r\n    if (dataArray.length > 0) {\r\n      const items = dataArray.map((item, i) => {\r\n        const isImage = item.fileName.match(/\\.(jpeg|jpg|gif|png)$/i);\r\n        const isPdf = item.fileName.match(/\\.pdf$/i);\r\n\r\n        return (\r\n          <div key={i} className=\"file-item\">\r\n            {isImage ? (\r\n              <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={item.url} alt={item.fileName} className=\"image-list\" />\r\n              </a>\r\n            ) : isPdf ? (\r\n              <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img\r\n                  src=\"https://cdn-icons-png.freepik.com/256/16425/16425681.png?semt=ais_hybrid\" \r\n                  alt={item.fileName}\r\n                  className=\"pdf-icon\"\r\n                />\r\n              </a>\r\n            ) : (\r\n              <div>\r\n                <p>Unsupported file type: {item.fileName}</p>\r\n              </div>\r\n            )}\r\n            <p>{item.fileName}</p> {/* Display the file name */}\r\n          </div>\r\n        );\r\n      });\r\n      setData(items);\r\n    } else {\r\n      alert(\"No image to display\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"file-list\">{data}</div>\r\n      <input type=\"text\" placeholder=\"Enter Address\" className=\"address\" />\r\n      <button className=\"center button\" onClick={getdata}>\r\n        Get Data\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}