{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Documents\\\\BlockShare\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\n// import { useState, useEffect } from \"react\";\n// import { ethers } from \"ethers\";\n// import FileUpload from \"./components/FileUpload\";\n// import Display from \"./components/Display\";\n// import Modal from \"./components/Modal\";\n// import \"./App.css\";\n\n// function App() {\n//   const [account, setAccount] = useState(\"\");\n//   const [contract, setContract] = useState(null);\n//   const [provider, setProvider] = useState(null);\n//   const [modalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n//     const loadProvider = async () => {\n//       if (provider) {\n//         window.ethereum.on(\"chainChanged\", () => {\n//           window.location.reload();\n//         });\n\n//         window.ethereum.on(\"accountsChanged\", () => {\n//           window.location.reload();\n//         });\n//         await provider.send(\"eth_requestAccounts\", []);\n//         const signer = provider.getSigner();\n//         const address = await signer.getAddress();\n//         setAccount(address);\n//         let contractAddress = \"0x37311Fa9d5798f925B85511270E6Cb7cdA359231\";\n\n//         const contract = new ethers.Contract(\n//           contractAddress,\n//           Upload.abi,\n//           signer\n//         );\n//         //console.log(contract);\n//         setContract(contract);\n//         setProvider(provider);\n//       } else {\n//         console.error(\"Metamask is not installed\");\n//       }\n//     };\n//     provider && loadProvider();\n//   }, []);\n//   return (\n//     <>\n//       {!modalOpen && (\n//         <button className=\"share\" onClick={() => setModalOpen(true)}>\n//           Share\n//         </button>\n//       )}\n//       {modalOpen && (\n//         <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\n//       )}\n\n//       <div className=\"App\">\n//         <h1 style={{ color: \"white\" }}>BlockShare</h1>\n//         <div class=\"bg\"></div>\n//         <div class=\"bg bg2\"></div>\n//         <div class=\"bg bg3\"></div>\n\n//         <p style={{ color: \"white\" }}>\n//           Account : {account ? account : \"Not connected\"}\n//         </p>\n//         <FileUpload\n//           account={account}\n//           provider={provider}\n//           contract={contract}\n//         ></FileUpload>\n//         <Display contract={contract} account={account}></Display>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0x37311Fa9d5798f925B85511270E6Cb7cdA359231\";\n        const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 800 600\",\n      className: \"blockchain-svg\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        fill: \"none\",\n        stroke: \"#00ffcc\",\n        strokeWidth: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"100\",\n          y: \"200\",\n          width: \"100\",\n          height: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"250\",\n          y: \"200\",\n          width: \"100\",\n          height: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"400\",\n          y: \"200\",\n          width: \"100\",\n          height: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: \"550\",\n          y: \"200\",\n          width: \"100\",\n          height: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"200\",\n          y1: \"225\",\n          x2: \"250\",\n          y2: \"225\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"350\",\n          y1: \"225\",\n          x2: \"400\",\n          y2: \"225\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"500\",\n          y1: \"225\",\n          x2: \"550\",\n          y2: \"225\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), !modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"BlockShare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg bg2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg bg3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: [\"Account : \", account ? account : \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        account: account,\n        provider: provider,\n        contract: contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        contract: contract,\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yGCxXQ87YH7dBPtrsE7SNVrz99c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Upload","useState","useEffect","ethers","FileUpload","Display","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","providers","Web3Provider","window","ethereum","loadProvider","on","location","reload","send","signer","getSigner","address","getAddress","contractAddress","Contract","abi","console","error","children","xmlns","viewBox","className","fill","stroke","strokeWidth","x","y","width","height","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/acer/Documents/BlockShare/client/src/App.js"],"sourcesContent":["// import Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\n// import { useState, useEffect } from \"react\";\n// import { ethers } from \"ethers\";\n// import FileUpload from \"./components/FileUpload\";\n// import Display from \"./components/Display\";\n// import Modal from \"./components/Modal\";\n// import \"./App.css\";\n\n// function App() {\n//   const [account, setAccount] = useState(\"\");\n//   const [contract, setContract] = useState(null);\n//   const [provider, setProvider] = useState(null);\n//   const [modalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n//     const loadProvider = async () => {\n//       if (provider) {\n//         window.ethereum.on(\"chainChanged\", () => {\n//           window.location.reload();\n//         });\n\n//         window.ethereum.on(\"accountsChanged\", () => {\n//           window.location.reload();\n//         });\n//         await provider.send(\"eth_requestAccounts\", []);\n//         const signer = provider.getSigner();\n//         const address = await signer.getAddress();\n//         setAccount(address);\n//         let contractAddress = \"0x37311Fa9d5798f925B85511270E6Cb7cdA359231\";\n\n//         const contract = new ethers.Contract(\n//           contractAddress,\n//           Upload.abi,\n//           signer\n//         );\n//         //console.log(contract);\n//         setContract(contract);\n//         setProvider(provider);\n//       } else {\n//         console.error(\"Metamask is not installed\");\n//       }\n//     };\n//     provider && loadProvider();\n//   }, []);\n//   return (\n//     <>\n//       {!modalOpen && (\n//         <button className=\"share\" onClick={() => setModalOpen(true)}>\n//           Share\n//         </button>\n//       )}\n//       {modalOpen && (\n//         <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\n//       )}\n\n//       <div className=\"App\">\n//         <h1 style={{ color: \"white\" }}>BlockShare</h1>\n//         <div class=\"bg\"></div>\n//         <div class=\"bg bg2\"></div>\n//         <div class=\"bg bg3\"></div>\n\n//         <p style={{ color: \"white\" }}>\n//           Account : {account ? account : \"Not connected\"}\n//         </p>\n//         <FileUpload\n//           account={account}\n//           provider={provider}\n//           contract={contract}\n//         ></FileUpload>\n//         <Display contract={contract} account={account}></Display>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\n\nfunction App() {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0x37311Fa9d5798f925B85511270E6Cb7cdA359231\";\n\n        const contract = new ethers.Contract(\n          contractAddress,\n          Upload.abi,\n          signer\n        );\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n\n  return (\n    <>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 800 600\"\n        className=\"blockchain-svg\"\n      >\n        <g fill=\"none\" stroke=\"#00ffcc\" strokeWidth=\"2\">\n          <rect x=\"100\" y=\"200\" width=\"100\" height=\"50\" />\n          <rect x=\"250\" y=\"200\" width=\"100\" height=\"50\" />\n          <rect x=\"400\" y=\"200\" width=\"100\" height=\"50\" />\n          <rect x=\"550\" y=\"200\" width=\"100\" height=\"50\" />\n          <line x1=\"200\" y1=\"225\" x2=\"250\" y2=\"225\" />\n          <line x1=\"350\" y1=\"225\" x2=\"400\" y2=\"225\" />\n          <line x1=\"500\" y1=\"225\" x2=\"550\" y2=\"225\" />\n        </g>\n      </svg>\n\n      {!modalOpen && (\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\n          Share\n        </button>\n      )}\n      {modalOpen && (\n        <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\n      )}\n\n      <div className=\"App\">\n        <h1 style={{ color: \"white\" }}>BlockShare</h1>\n        <div className=\"bg\"></div>\n        <div className=\"bg bg2\"></div>\n        <div className=\"bg bg3\"></div>\n\n        <p style={{ color: \"white\" }}>\n          Account : {account ? account : \"Not connected\"}\n        </p>\n        <FileUpload\n          account={account}\n          provider={provider}\n          contract={contract}\n        ></FileUpload>\n        <Display contract={contract} account={account}></Display>\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}